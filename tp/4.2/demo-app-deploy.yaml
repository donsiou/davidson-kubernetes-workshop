
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${USER_NAME}
  labels:
    app: ${USER_NAME}
spec:
  replicas: 2

  selector:
    matchLabels:
      app: ${USER_NAME}

  template:
    metadata:
      labels:
        app: ${USER_NAME}
        egress.networking.k8s.io: "true"
        ingress.networking.k8s.io: "true"
    spec:
      containers:
      - name: demo-app
        image: 479165877194.dkr.ecr.us-east-1.amazonaws.com/eks-demo-app:latest
        
        ports:
        - name: web
          containerPort: 8080
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
          allowPrivilegeEscalation: false
        
        livenessProbe:
          httpGet:
            path: /health
            #path: /health-degraded
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          
        readinessProbe:
          httpGet:
            path: /health
            #path: /health-degraded
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 2
        env:
          - name: NAMESPACE
            value: formation-${USER_NAME}
          - name: IS_HTML
            valueFrom:
              configMapKeyRef:
                name: ${USER_NAME}    
                key: is_html
        volumeMounts:
          - name: config
            mountPath: "/config"
            readOnly: true
      volumes:
      - name: config
        configMap:
          name: ${USER_NAME}
          items: 
            - key: home.html
              path: home.html
        